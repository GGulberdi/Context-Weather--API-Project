{"version":3,"sources":["context/WeatherContext.js","containers/CityList.js","containers/AddCityButton.js","containers/TemperatureAverage.js","containers/App.js","index.js"],"names":["WeatherContext","createContext","CityList","useContext","cities","addCity","className","map","city","name","temperature","AddCityButton","useState","setName","onChange","e","target","value","onClick","urltoFetch","console","log","fetch","then","res","json","data","current","TemperatureAverage","length","total","avg","toFixed","App","setCities","Provider","ReactDOM","render","document","getElementById"],"mappings":"0KAGaA,EAAiBC,0B,OC2BbC,EA3BA,WAAO,IAAD,EAEGC,qBAAWH,GAA9BI,EAFgB,EAEhBA,OAFgB,EAERC,QAIX,OACE,wBAAOC,UAAU,YAAjB,UACE,gCACE,+BACE,sCACA,kDAGJ,gCACGF,EAAOG,KAAI,SAAAC,GAAI,OACZ,+BACA,6BAAKA,EAAKC,OACV,6BAAKD,EAAKE,0BCiBPC,EAhCK,WAAO,IACtBN,EAAWF,qBAAWH,GAAtBK,QADqB,EAELO,mBAAS,IAFJ,mBAErBH,EAFqB,KAEhBI,EAFgB,KAsBxB,OACE,sBAAKP,UAAU,gBAAf,UAEE,uBAAOA,UAAU,QAAQQ,SAAU,SAACC,GAAD,OAAKF,EAAQE,EAAEC,OAAOC,QAAQA,MAAOR,IACxE,wBAAQH,UAAU,QAAQY,QApBb,SAACH,GACtB,IACII,EAAU,yDADD,mCACC,kBAAqEV,GAEnFW,QAAQC,IAAIF,GAEVG,MADYH,GAEPI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GACLrB,EAAQI,EAAKiB,EAAKC,QAAQjB,aAC1BG,EAAQ,QAUR,qB,OCDSe,EA5BU,WAAO,IAAD,EACLzB,qBAAWH,GAA9BI,EADwB,EACxBA,OADwB,EAChBC,QAQb,GAAsB,IAAlBD,EAAOyB,OACT,OACE,sFAIJ,IAf6B,EAezBC,EAAQ,EAfiB,cAgBV1B,GAhBU,IAgB7B,2BAA2B,CACzB0B,GADyB,QACXpB,aAjBa,8BAmB7B,IAAMqB,EAAMD,EAAQ1B,EAAOyB,OAE3B,OACE,kDACiB,4BAAIE,EAAIC,QAAQ,KADjC,2BCSSC,MA3Bf,WAAgB,IAAD,EACYrB,mBAAS,CAClC,CAACH,KAAK,SACRC,YAAY,KAHG,mBACRN,EADQ,KACA8B,EADA,KAab,OADFd,QAAQC,IAAIjB,GAER,cAACJ,EAAemC,SAAhB,CAAyBlB,MAAO,CAACb,SAAQC,QAP9B,SAACI,EAAMC,GACrBwB,EAAU,GAAD,mBACJ9B,GADI,CACG,CAACK,KAAKA,EAAMC,YAAYA,QAKjC,SACE,sBAAKJ,UAAU,gBAAf,UACE,mDACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,UCrBR8B,IAASC,OACL,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.0a2d09e9.chunk.js","sourcesContent":["import React, {createContext} from 'react';\r\n\r\n\r\nexport const WeatherContext = createContext()\r\n\r\n","import React, {useContext}from \"react\";\r\nimport {WeatherContext} from '../context/WeatherContext';\r\n\r\nconst CityList = () => {\r\n  \r\nconst {cities, addCity} = useContext(WeatherContext)\r\n\r\n\r\n\r\n    return (\r\n      <table className=\"city-list\">\r\n        <thead>\r\n          <tr>\r\n            <th>City</th>\r\n            <th>Temperature</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {cities.map(city=>(\r\n              <tr >\r\n              <td>{city.name}</td>\r\n              <td>{city.temperature}</td>\r\n              </tr>\r\n               ))}\r\n             \r\n        </tbody>\r\n      </table>\r\n    );\r\n  };\r\n\r\n  export default CityList;\r\n","import React,{useContext, useState} from \"react\";\r\nimport { WeatherContext } from \"../context/WeatherContext\";\r\n\r\n// const apiKey = \"2082573baa2c88e4ee84edd0044c8192\";\r\n// const forecastUrl = \"\";\r\n\r\nconst AddCityButton = () => {\r\nconst {addCity} = useContext(WeatherContext);\r\nconst [name,setName] = useState('');\r\n\r\n\r\n\r\nconst handleSubmit = (e) => {\r\nconst apiKey='9c7c6bb649f116a9ba16f7930b195075'\r\nlet urltoFetch = `http://api.weatherstack.com/current?access_key=${apiKey}&query=${name}` \r\n\r\nconsole.log(urltoFetch)\r\n  const url = urltoFetch\r\n  fetch(url)\r\n      .then(res => res.json())\r\n      .then((data) => {\r\n        addCity(name,data.current.temperature);\r\n        setName('');\r\n      })\r\n   \r\n  // e.preventDefault();\r\n  \r\n}\r\n    return (\r\n      <div className=\"add-city-form\">\r\n        \r\n        <input className=\"input\" onChange={(e)=>setName(e.target.value)} value={name}/>\r\n        <button className=\"input\" onClick={handleSubmit}>Add</button>\r\n        \r\n      </div>\r\n    );\r\n  };\r\n\r\n  export default AddCityButton;\r\n","import React, {useContext} from 'react';\r\nimport {WeatherContext} from '../context/WeatherContext';\r\n\r\nconst TemperatureAverage = () => {\r\n  const {cities, addCity} = useContext(WeatherContext)\r\n\r\n\r\n    // const cities = [{\r\n    //   name: cities.name,\r\n    //   temperature: cities.name\r\n    // }]\r\n\r\n    if (cities.length === 0) {\r\n      return (\r\n        <div>Add some cities to view their average temperatures.</div>\r\n      );\r\n    }\r\n  \r\n    let total = 0;\r\n    for (const city of cities) {\r\n      total += city.temperature;\r\n    }\r\n    const avg = total / cities.length;\r\n  \r\n    return (\r\n      <div>\r\n        The average is <b>{avg.toFixed(2)}</b> degrees Fahrenheit.\r\n      </div>\r\n    );\r\n  };\r\n\r\n  export default TemperatureAverage;\r\n","import React, {useState} from \"react\";\r\nimport {WeatherContext} from '../context/WeatherContext';\r\nimport CityList from './CityList';\r\nimport AddCityButton from './AddCityButton';\r\nimport TemperatureAverage from './TemperatureAverage';\r\n\r\n\r\nfunction App() {\r\nconst [cities, setCities]= useState([\r\n  {name:'Berlin',\r\ntemperature:7}\r\n])\r\n\r\n\r\nconst addCity= (name, temperature)=>{\r\n setCities([\r\n   ...cities,{name:name, temperature:temperature}\r\n ])\r\n}\r\nconsole.log(cities)\r\n  return (\r\n    <WeatherContext.Provider value={{cities, addCity}}> \r\n      <div className=\"city-overview\">\r\n        <h2>Multi-Weather App</h2>\r\n        <CityList/>\r\n        <AddCityButton/>\r\n        <TemperatureAverage/>\r\n      </div>\r\n    </WeatherContext.Provider>\r\n\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"./index.css\"\r\nimport App from './containers/App';\r\n\r\nReactDOM.render(\r\n    <App />,  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}